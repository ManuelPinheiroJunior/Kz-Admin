[{"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\index.js":"1","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\App.js":"2","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\state\\api.js":"3","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\state\\index.js":"4","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\theme.js":"5","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\products\\index.jsx":"6","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\layout\\index.jsx":"7","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\dashboard\\index.jsx":"8","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\customers\\index.jsx":"9","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\geography\\index.jsx":"10","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\overview\\index.jsx":"11","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\transactions\\index.jsx":"12","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\daily\\index.jsx":"13","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\monthly\\index.jsx":"14","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\admin\\index.jsx":"15","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\breakdown\\index.jsx":"16","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\Header.jsx":"17","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\Navbar.jsx":"18","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\Sidebar.jsx":"19","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\FlexBetween.jsx":"20","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\BreakdownChart.jsx":"21","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\StatBox.jsx":"22","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\OverviewChart.jsx":"23","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\state\\geoData.js":"24","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\DataGridCustomColumnMenu.jsx":"25","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\DataGridCustomToolbar.jsx":"26","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\ButtonAdd.jsx":"27","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\loginPage\\index.jsx":"28","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\loginPage\\Form.jsx":"29"},{"size":760,"mtime":1697583806362,"results":"30","hashOfConfig":"31"},{"size":2369,"mtime":1700431756629,"results":"32","hashOfConfig":"31"},{"size":2299,"mtime":1701127742963,"results":"33","hashOfConfig":"31"},{"size":767,"mtime":1701029356444,"results":"34","hashOfConfig":"31"},{"size":3624,"mtime":1700968546333,"results":"35","hashOfConfig":"31"},{"size":3434,"mtime":1700342321685,"results":"36","hashOfConfig":"31"},{"size":1021,"mtime":1700440474493,"results":"37","hashOfConfig":"31"},{"size":5784,"mtime":1700442727844,"results":"38","hashOfConfig":"31"},{"size":2370,"mtime":1700967705567,"results":"39","hashOfConfig":"31"},{"size":3079,"mtime":1697583806371,"results":"40","hashOfConfig":"31"},{"size":952,"mtime":1697583806374,"results":"41","hashOfConfig":"31"},{"size":3268,"mtime":1697583806379,"results":"42","hashOfConfig":"31"},{"size":5722,"mtime":1697583806367,"results":"43","hashOfConfig":"31"},{"size":4623,"mtime":1697583806372,"results":"44","hashOfConfig":"31"},{"size":2493,"mtime":1697583806364,"results":"45","hashOfConfig":"31"},{"size":442,"mtime":1697583806365,"results":"46","hashOfConfig":"31"},{"size":866,"mtime":1700343216554,"results":"47","hashOfConfig":"31"},{"size":3808,"mtime":1701127908433,"results":"48","hashOfConfig":"31"},{"size":6411,"mtime":1701127344283,"results":"49","hashOfConfig":"31"},{"size":241,"mtime":1697583806331,"results":"50","hashOfConfig":"31"},{"size":3895,"mtime":1697583806328,"results":"51","hashOfConfig":"31"},{"size":1222,"mtime":1697583806359,"results":"52","hashOfConfig":"31"},{"size":4574,"mtime":1700967436354,"results":"53","hashOfConfig":"31"},{"size":448283,"mtime":1697583806383,"results":"54","hashOfConfig":"31"},{"size":561,"mtime":1697583806329,"results":"55","hashOfConfig":"31"},{"size":1403,"mtime":1697583806331,"results":"56","hashOfConfig":"31"},{"size":1835,"mtime":1701029571590,"results":"57","hashOfConfig":"31"},{"size":1050,"mtime":1701029300620,"results":"58","hashOfConfig":"31"},{"size":9066,"mtime":1701127732185,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1cap7ry",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"63"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"70"},"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\index.js",[],[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\App.js",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\state\\api.js",[],[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\state\\index.js",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\theme.js",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\products\\index.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\layout\\index.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\dashboard\\index.jsx",["152"],[],"import React from \"react\";\r\nimport Header from \"components/Header\";\r\nimport {\r\n  Email,\r\n  PointOfSale,\r\n  PersonAdd,\r\n  Traffic,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport BreakdownChart from \"components/BreakdownChart\";\r\nimport OverviewChart from \"components/OverviewChart\";\r\nimport { useGetDashboardQuery, useGetUserQuery } from \"state/api\";\r\nimport StatBox from \"components/StatBox\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Dashboard = () => {\r\n  const theme = useTheme();\r\n  const isNonMediumScreens = useMediaQuery(\"(min-width: 1200px)\");\r\n  const { data, isLoading } = useGetDashboardQuery();\r\n  const userId = useSelector((state) => state.global.userId);\r\n  const date = new Date();\r\n  const currentYear = date.getFullYear();\r\n  const  dataUser  = useGetUserQuery(userId);\r\n\r\n  const columns = [\r\n    {\r\n      field: \"_id\",\r\n      headerName: \"ID\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"userId\",\r\n      headerName: \"User ID\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"createdAt\",\r\n      headerName: \"CreatedAt\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"products\",\r\n      headerName: \"# of Products\",\r\n      flex: 0.5,\r\n      sortable: false,\r\n      renderCell: (params) => params.value.length,\r\n    },\r\n    {\r\n      field: \"cost\",\r\n      headerName: \"Cost\",\r\n      flex: 1,\r\n      renderCell: (params) => `$${Number(params.value).toFixed(2)}`,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box m=\"1.5rem 2.5rem\">\r\n    \r\n        <Header title=\"DASHBOARD\" subtitle=\"Welcome to your dashboard\"  reportButton={true} />\r\n  \r\n      <Box\r\n        mt=\"20px\"\r\n        display=\"grid\"\r\n        gridTemplateColumns=\"repeat(12, 1fr)\"\r\n        gridAutoRows=\"160px\"\r\n        gap=\"20px\"\r\n        sx={{\r\n          \"& > div\": { gridColumn: isNonMediumScreens ? undefined : \"span 12\" },\r\n        }}\r\n      >\r\n        {/* ROW 1 */}\r\n        <StatBox\r\n          title=\"Total Customers\"\r\n          value={data && data.totalCustomers}\r\n          increase=\"+14%\"\r\n          description=\"Since last month\"\r\n          icon={\r\n            <Email\r\n              sx={{ color: theme.palette.secondary[300], fontSize: \"26px\" }}\r\n            />\r\n          }\r\n        />\r\n        <StatBox\r\n          title=\"Sales Today\"\r\n          value={data && data.todayStats.totalSales}\r\n          increase=\"+21%\"\r\n          description=\"Since last month\"\r\n          icon={\r\n            <PointOfSale\r\n              sx={{ color: theme.palette.secondary[300], fontSize: \"26px\" }}\r\n            />\r\n          }\r\n        />\r\n        <Box\r\n          gridColumn=\"span 8\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={theme.palette.background.alt}\r\n          p=\"1rem\"\r\n          borderRadius=\"0.55rem\"\r\n        >\r\n          <Typography variant=\"h6\" sx={{ color: theme.palette.secondary[100], textAlign: \"center\"  }}>{`Monthly sales total for the year ${currentYear}`} </Typography>\r\n          <OverviewChart view=\"sales\" isDashboard={true} />\r\n        </Box>\r\n        <StatBox\r\n          title=\"Monthly Sales\"\r\n          value={data && data.thisMonthStats.totalSales}\r\n          increase=\"+5%\"\r\n          description=\"Since last month\"\r\n          icon={\r\n            <PersonAdd\r\n              sx={{ color: theme.palette.secondary[300], fontSize: \"26px\" }}\r\n            />\r\n          }\r\n        />\r\n        <StatBox\r\n          title=\"Yearly Sales\"\r\n          value={data && data.yearlySalesTotal}\r\n          increase=\"+43%\"\r\n          description=\"Since last month\"\r\n          icon={\r\n            <Traffic\r\n              sx={{ color: theme.palette.secondary[300], fontSize: \"26px\" }}\r\n            />\r\n          }\r\n        />\r\n\r\n        {/* ROW 2 */}\r\n        <Box\r\n          gridColumn=\"span 8\"\r\n          gridRow=\"span 3\"\r\n          sx={{\r\n            \"& .MuiDataGrid-root\": {\r\n              border: \"none\",\r\n              borderRadius: \"5rem\",\r\n            },\r\n            \"& .MuiDataGrid-cell\": {\r\n              borderBottom: \"none\",\r\n            },\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              backgroundColor: theme.palette.background.alt,\r\n              color: theme.palette.secondary[100],\r\n              borderBottom: \"none\",\r\n            },\r\n            \"& .MuiDataGrid-virtualScroller\": {\r\n              backgroundColor: theme.palette.background.alt,\r\n            },\r\n            \"& .MuiDataGrid-footerContainer\": {\r\n              backgroundColor: theme.palette.background.alt,\r\n              color: theme.palette.secondary[100],\r\n              borderTop: \"none\",\r\n            },\r\n            \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\r\n              color: `${theme.palette.secondary[200]} !important`,\r\n            },\r\n          }}\r\n        >\r\n          <DataGrid\r\n            loading={isLoading || !data}\r\n            getRowId={(row) => row._id}\r\n            rows={(data && data.transactions) || []}\r\n            columns={columns}\r\n          />\r\n        </Box>\r\n        <Box\r\n          gridColumn=\"span 4\"\r\n          gridRow=\"span 3\"\r\n          backgroundColor={theme.palette.background.alt}\r\n          p=\"1.5rem\"\r\n          borderRadius=\"0.55rem\"\r\n        >\r\n          <Typography variant=\"h6\" sx={{ color: theme.palette.secondary[100] }}>\r\n            Sales By Category\r\n          </Typography>\r\n          <BreakdownChart isDashboard={true} />\r\n          <Typography\r\n            p=\"0 0.6rem\"\r\n            fontSize=\"0.8rem\"\r\n            sx={{ color: theme.palette.secondary[200] }}\r\n          >\r\n            Breakdown of real states and information via category for revenue\r\n            made for this year and total sales.\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\customers\\index.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\geography\\index.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\overview\\index.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\transactions\\index.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\daily\\index.jsx",[],["153"],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\monthly\\index.jsx",[],["154"],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\admin\\index.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\breakdown\\index.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\Header.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\Navbar.jsx",["155"],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\Sidebar.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\FlexBetween.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\BreakdownChart.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\StatBox.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\OverviewChart.jsx",[],["156"],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\state\\geoData.js",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\DataGridCustomColumnMenu.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\DataGridCustomToolbar.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\components\\ButtonAdd.jsx",["157"],[],"import * as React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { useTheme } from '@emotion/react';\r\nimport { DownloadOutlined } from '@mui/icons-material';\r\nimport { usePostProductMutation } from 'state/api';\r\n\r\nconst data = {\r\n  _id: \"63701d24f03239c72c00118e\",\r\n  name: \"Port Beckley\",\r\n  price: 311.71,\r\n  description: \"MyProduct\",\r\n  category: \"clothing\",\r\n  rating: 1.15,\r\n  supply: 1320,\r\n};\r\n\r\nexport default function ButtonAdd({ addButton, reportButton }) {\r\n    const theme = useTheme();\r\n    const [postProduct, { isLoading }] = usePostProductMutation();\r\n\r\n\r\n    const handleAdd = async (e) => {\r\n        e.preventDefault();\r\n       if(e.type === \"click\"){\r\n         await postProduct(data);\r\n       }\r\n    }\r\n\r\n\r\n  return (\r\n    <Stack spacing={2} direction=\"row\">\r\n      { addButton && (<Button variant=\"contained\" startIcon={<AddIcon />} sx={{\r\n              backgroundColor: theme.palette.secondary.light,\r\n              color: theme.palette.background.alt,\r\n              fontSize: \"14px\",\r\n              fontWeight: \"bold\",\r\n              padding: \"10px 20px\"\r\n      }} onClick={(e) => handleAdd(e)}>to Add</Button> )}\r\n     { reportButton && (\r\n          <Button\r\n            sx={{\r\n              backgroundColor: theme.palette.secondary.light,\r\n              color: theme.palette.background.alt,\r\n              fontSize: \"14px\",\r\n              fontWeight: \"bold\",\r\n              padding: \"10px 20px\",\r\n              \"&:hover\": {\r\n                cursor: \"pointer\",\r\n                color: theme.palette.secondary.main,\r\n              },\r\n\r\n            }}\r\n            startIcon={ <DownloadOutlined  />}\r\n          >\r\n            Download Reports\r\n          </Button>\r\n        )}\r\n    </Stack>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\loginPage\\index.jsx",[],[],"C:\\Users\\Manue\\OneDrive\\Área de Trabalho\\projects\\Kz-Admin\\client\\src\\scenes\\loginPage\\Form.jsx",["158"],[],"import { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  useMediaQuery,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLogin, setUserId } from \"state\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport FlexBetween from \"components/FlexBetween\";\r\n\r\nconst registerSchema = yup.object().shape({\r\n  firstName: yup.string().required(\"required\"),\r\n  lastName: yup.string().required(\"required\"),\r\n  email: yup.string().email(\"invalid email\").required(\"required\"),\r\n  password: yup.string().required(\"required\"),\r\n  location: yup.string().required(\"required\"),\r\n  occupation: yup.string().required(\"required\"),\r\n  picture: yup.string().required(\"required\"),\r\n});\r\n\r\nconst loginSchema = yup.object().shape({\r\n  email: yup.string().email(\"invalid email\").required(\"required\"),\r\n  password: yup.string().required(\"required\"),\r\n});\r\n\r\nconst initialValuesRegister = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  location: \"\",\r\n  occupation: \"\",\r\n  picture: \"\",\r\n};\r\n\r\nconst initialValuesLogin = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst Form = () => {\r\n  const [pageType, setPageType] = useState(\"login\");\r\n  const { palette } = useTheme();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n  const isLogin = pageType === \"login\";\r\n  const isRegister = pageType === \"register\";\r\n\r\n  const register = async (values, onSubmitProps) => {\r\n    // this allows us to send form info with image\r\n    const formData = new FormData();\r\n    for (let value in values) {\r\n      formData.append(value, values[value]);\r\n    }\r\n    formData.append(\"picturePath\", values.picture.name);\r\n\r\n    const savedUserResponse = await fetch(\r\n      `${process.env.REACT_APP_BASE_URL}auth/register`,\r\n      {\r\n        method: \"POST\",\r\n        body: formData,\r\n      }\r\n    );\r\n    const savedUser = await savedUserResponse.json();\r\n    onSubmitProps.resetForm();\r\n\r\n    if (savedUser) {\r\n      setPageType(\"login\");\r\n    }\r\n  };\r\n\r\n  const login = async (values, onSubmitProps) => {\r\n    const loggedInResponse = await fetch(`${process.env.REACT_APP_BASE_URL}/auth/login`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(values),\r\n    });\r\n    const loggedIn = await loggedInResponse.json();\r\n    onSubmitProps.resetForm();\r\n    if (loggedIn) {\r\n      dispatch(\r\n        setLogin({\r\n          user: loggedIn.user,\r\n          token: loggedIn.token,\r\n        })\r\n      );\r\n      dispatch(setUserId(loggedIn.user._id));\r\n      navigate(\"/dashboard\");\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (values, onSubmitProps) => {\r\n    if (isLogin) await login(values, onSubmitProps);\r\n    if (isRegister) await register(values, onSubmitProps);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={handleFormSubmit}\r\n      initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\r\n      validationSchema={isLogin ? loginSchema : registerSchema}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue,\r\n        resetForm,\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Box\r\n            display=\"grid\"\r\n            gap=\"30px\"\r\n            gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\r\n            sx={{\r\n              \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\r\n            }}\r\n          >\r\n            {isRegister && (\r\n              <>\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  name=\"firstName\"\r\n                  error={\r\n                    Boolean(touched.firstName) && Boolean(errors.firstName)\r\n                  }\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  sx={{ gridColumn: \"span 2\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  name=\"lastName\"\r\n                  error={Boolean(touched.lastName) && Boolean(errors.lastName)}\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  sx={{ gridColumn: \"span 2\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Location\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.location}\r\n                  name=\"location\"\r\n                  error={Boolean(touched.location) && Boolean(errors.location)}\r\n                  helperText={touched.location && errors.location}\r\n                  sx={{ gridColumn: \"span 4\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Occupation\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.occupation}\r\n                  name=\"occupation\"\r\n                  error={\r\n                    Boolean(touched.occupation) && Boolean(errors.occupation)\r\n                  }\r\n                  helperText={touched.occupation && errors.occupation}\r\n                  sx={{ gridColumn: \"span 4\" }}\r\n                />\r\n                <Box\r\n                  gridColumn=\"span 4\"\r\n                  border={`1px solid ${palette.neutral.medium}`}\r\n                  borderRadius=\"5px\"\r\n                  p=\"1rem\"\r\n                >\r\n                  <Dropzone\r\n                    acceptedFiles=\".jpg,.jpeg,.png\"\r\n                    multiple={false}\r\n                    onDrop={(acceptedFiles) =>\r\n                      setFieldValue(\"picture\", acceptedFiles[0])\r\n                    }\r\n                  >\r\n                    {({ getRootProps, getInputProps }) => (\r\n                      <Box\r\n                        {...getRootProps()}\r\n                        border={`2px dashed ${palette.secondary.light}`}\r\n                        p=\"1rem\"\r\n                        sx={{ \"&:hover\": { cursor: \"pointer\" } }}\r\n                      >\r\n                        <input {...getInputProps()} />\r\n                        {!values.picture ? (\r\n                          <p>Add Picture Here</p>\r\n                        ) : (\r\n                          <FlexBetween>\r\n                            <Typography>{values.picture.name}</Typography>\r\n                            <EditOutlinedIcon />\r\n                          </FlexBetween>\r\n                        )}\r\n                      </Box>\r\n                    )}\r\n                  </Dropzone>\r\n                </Box>\r\n              </>\r\n            )}\r\n\r\n            <TextField\r\n              label=\"Email\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.email}\r\n              name=\"email\"\r\n              error={Boolean(touched.email) && Boolean(errors.email)}\r\n              helperText={touched.email && errors.email}\r\n              sx={{ gridColumn: \"span 4\" }}\r\n            />\r\n            <TextField\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.password}\r\n              name=\"password\"\r\n              error={Boolean(touched.password) && Boolean(errors.password)}\r\n              helperText={touched.password && errors.password}\r\n              sx={{ gridColumn: \"span 4\" }}\r\n            />\r\n          </Box>\r\n\r\n          {/* BUTTONS */}\r\n          <Box>\r\n            <Button\r\n              fullWidth\r\n              type=\"submit\"\r\n              sx={{\r\n                m: \"2rem 0\",\r\n                p: \"1rem\",\r\n                color: palette.background.alt,\r\n                \"&:hover\": { color: palette.secondary.main },\r\n                backgroundColor: palette.secondary.light,\r\n                color: palette.background.alt,\r\n              }}\r\n            >\r\n              {isLogin ? \"LOGIN\" : \"REGISTER\"}\r\n            </Button>\r\n            <Typography\r\n              onClick={() => {\r\n                setPageType(isLogin ? \"register\" : \"login\");\r\n                resetForm();\r\n              }}\r\n              sx={{\r\n                textDecoration: \"underline\",\r\n                color: palette.secondary.light,\r\n                \"&:hover\": {\r\n                  cursor: \"pointer\",\r\n                },\r\n              }}\r\n            >\r\n              {isLogin\r\n                ? \"Don't have an account? Sign Up here.\"\r\n                : \"Already have an account? Login here.\"}\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n",{"ruleId":"159","severity":1,"message":"160","line":29,"column":10,"nodeType":"161","messageId":"162","endLine":29,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":48,"column":6,"nodeType":"165","endLine":48,"endColumn":32,"suggestions":"166","suppressions":"167"},{"ruleId":"163","severity":1,"message":"164","line":39,"column":6,"nodeType":"165","endLine":39,"endColumn":12,"suggestions":"168","suppressions":"169"},{"ruleId":"159","severity":1,"message":"170","line":7,"column":3,"nodeType":"161","messageId":"162","endLine":7,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":45,"column":6,"nodeType":"165","endLine":45,"endColumn":12,"suggestions":"171","suppressions":"172"},{"ruleId":"159","severity":1,"message":"173","line":21,"column":27,"nodeType":"161","messageId":"162","endLine":21,"endColumn":36},{"ruleId":"174","severity":1,"message":"175","line":247,"column":17,"nodeType":"176","messageId":"177","endLine":247,"endColumn":22},"no-unused-vars","'dataUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'theme.palette.secondary'. Either include it or remove the dependency array.","ArrayExpression",["178"],["179"],["180"],["181"],"'SettingsOutlined' is defined but never used.",["182"],["183"],"'isLoading' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected",{"desc":"184","fix":"185"},{"kind":"186","justification":"187"},{"desc":"188","fix":"189"},{"kind":"186","justification":"187"},{"desc":"188","fix":"190"},{"kind":"186","justification":"187"},"Update the dependencies array to be: [data, theme.palette.secondary, startDate, endDate]",{"range":"191","text":"192"},"directive","","Update the dependencies array to be: [data, theme.palette.secondary]",{"range":"193","text":"194"},{"range":"195","text":"194"},[1543,1569],"[data, theme.palette.secondary, startDate, endDate]",[1089,1095],"[data, theme.palette.secondary]",[1287,1293]]