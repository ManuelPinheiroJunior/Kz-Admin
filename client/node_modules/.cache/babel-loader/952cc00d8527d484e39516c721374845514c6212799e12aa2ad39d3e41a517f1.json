{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manue\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projects\\\\fullstack-admin\\\\client\\\\src\\\\components\\\\OverviewChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport { useTheme } from \"@mui/material\";\nimport { useGetSalesQuery } from \"state/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OverviewChart = _ref => {\n  _s();\n  let {\n    isDashboard = false,\n    view\n  } = _ref;\n  const theme = useTheme();\n  const {\n    data,\n    isLoading\n  } = useGetSalesQuery();\n  const [totalSalesLine, totalUnitsLine] = useMemo(() => {\n    if (!data) return [];\n    const {\n      monthlyData\n    } = data;\n    const totalSalesLine = {\n      id: \"totalSales\",\n      color: theme.palette.secondary.main,\n      data: []\n    };\n    const totalUnitsLine = {\n      id: \"totalUnits\",\n      color: theme.palette.secondary[600],\n      data: []\n    };\n    Object.values(monthlyData).reduce((acc, _ref2) => {\n      let {\n        month,\n        totalSales,\n        totalUnits\n      } = _ref2;\n      const curSales = acc.sales + totalSales;\n      const curUnits = acc.units + totalUnits;\n      totalSalesLine.data = [...totalSalesLine.data, {\n        x: month,\n        y: curSales\n      }];\n      totalUnitsLine.data = [...totalUnitsLine.data, {\n        x: month,\n        y: curUnits\n      }];\n      return {\n        sales: curSales,\n        units: curUnits\n      };\n    }, {\n      sales: 0,\n      units: 0\n    });\n    return [[totalSalesLine], [totalUnitsLine]];\n  }, [data]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (!data || isLoading) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(ResponsiveLine, {\n    data: view === \"sales\" ? totalSalesLine : totalUnitsLine,\n    theme: {\n      axis: {\n        domain: {\n          line: {\n            stroke: theme.palette.secondary[200]\n          }\n        },\n        legend: {\n          text: {\n            fill: theme.palette.secondary[200]\n          }\n        },\n        ticks: {\n          line: {\n            stroke: theme.palette.secondary[200],\n            strokeWidth: 1\n          },\n          text: {\n            fill: theme.palette.secondary[200]\n          }\n        }\n      },\n      legends: {\n        text: {\n          fill: theme.palette.secondary[200]\n        }\n      },\n      tooltip: {\n        container: {\n          color: theme.palette.primary.main\n        }\n      }\n    },\n    margin: {\n      top: 20,\n      right: 50,\n      bottom: 50,\n      left: 70\n    },\n    xScale: {\n      type: \"point\"\n    },\n    yScale: {\n      type: \"linear\",\n      min: \"auto\",\n      max: \"auto\",\n      stacked: false,\n      reverse: false\n    },\n    yFormat: \" >-.2f\",\n    curve: \"catmullRom\",\n    enableArea: isDashboard,\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      format: v => {\n        if (isDashboard) return v.slice(0, 3);\n        return v;\n      },\n      orient: \"bottom\",\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: isDashboard ? \"\" : \"Month\",\n      legendOffset: 36,\n      legendPosition: \"middle\"\n    },\n    axisLeft: {\n      orient: \"left\",\n      tickValues: 5,\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: isDashboard ? \"\" : `Total ${view === \"sales\" ? \"Revenue\" : \"Units\"} for Year`,\n      legendOffset: -60,\n      legendPosition: \"middle\"\n    },\n    enableGridX: false,\n    enableGridY: false,\n    pointSize: 10,\n    pointColor: {\n      theme: \"background\"\n    },\n    pointBorderWidth: 2,\n    pointBorderColor: {\n      from: \"serieColor\"\n    },\n    pointLabelYOffset: -12,\n    useMesh: true,\n    legends: !isDashboard ? [{\n      anchor: \"bottom-right\",\n      direction: \"column\",\n      justify: false,\n      translateX: 30,\n      translateY: -40,\n      itemsSpacing: 0,\n      itemDirection: \"left-to-right\",\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: \"circle\",\n      symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n      effects: [{\n        on: \"hover\",\n        style: {\n          itemBackground: \"rgba(0, 0, 0, .03)\",\n          itemOpacity: 1\n        }\n      }]\n    }] : undefined\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(OverviewChart, \"DyUYL9XTsuZG9gpWlHcCz+/c2Mc=\", false, function () {\n  return [useTheme, useGetSalesQuery];\n});\n_c = OverviewChart;\nexport default OverviewChart;\nvar _c;\n$RefreshReg$(_c, \"OverviewChart\");","map":{"version":3,"names":["React","useMemo","ResponsiveLine","useTheme","useGetSalesQuery","OverviewChart","isDashboard","view","theme","data","isLoading","totalSalesLine","totalUnitsLine","monthlyData","id","color","palette","secondary","main","Object","values","reduce","acc","month","totalSales","totalUnits","curSales","sales","curUnits","units","x","y","axis","domain","line","stroke","legend","text","fill","ticks","strokeWidth","legends","tooltip","container","primary","top","right","bottom","left","type","min","max","stacked","reverse","format","v","slice","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","tickValues","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","undefined"],"sources":["C:/Users/Manue/OneDrive/Área de Trabalho/projects/fullstack-admin/client/src/components/OverviewChart.jsx"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { useGetSalesQuery } from \"state/api\";\r\n\r\nconst OverviewChart = ({ isDashboard = false, view }) => {\r\n  const theme = useTheme();\r\n  const { data, isLoading } = useGetSalesQuery();\r\n\r\n  const [totalSalesLine, totalUnitsLine] = useMemo(() => {\r\n    if (!data) return [];\r\n\r\n    const { monthlyData } = data;\r\n    const totalSalesLine = {\r\n      id: \"totalSales\",\r\n      color: theme.palette.secondary.main,\r\n      data: [],\r\n    };\r\n    const totalUnitsLine = {\r\n      id: \"totalUnits\",\r\n      color: theme.palette.secondary[600],\r\n      data: [],\r\n    };\r\n\r\n    Object.values(monthlyData).reduce(\r\n      (acc, { month, totalSales, totalUnits }) => {\r\n        const curSales = acc.sales + totalSales;\r\n        const curUnits = acc.units + totalUnits;\r\n\r\n        totalSalesLine.data = [\r\n          ...totalSalesLine.data,\r\n          { x: month, y: curSales },\r\n        ];\r\n        totalUnitsLine.data = [\r\n          ...totalUnitsLine.data,\r\n          { x: month, y: curUnits },\r\n        ];\r\n\r\n        return { sales: curSales, units: curUnits };\r\n      },\r\n      { sales: 0, units: 0 }\r\n    );\r\n\r\n    return [[totalSalesLine], [totalUnitsLine]];\r\n  }, [data]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  if (!data || isLoading) return \"Loading...\";\r\n\r\n  return (\r\n    <ResponsiveLine\r\n      data={view === \"sales\" ? totalSalesLine : totalUnitsLine}\r\n      theme={{\r\n        axis: {\r\n          domain: {\r\n            line: {\r\n              stroke: theme.palette.secondary[200],\r\n            },\r\n          },\r\n          legend: {\r\n            text: {\r\n              fill: theme.palette.secondary[200],\r\n            },\r\n          },\r\n          ticks: {\r\n            line: {\r\n              stroke: theme.palette.secondary[200],\r\n              strokeWidth: 1,\r\n            },\r\n            text: {\r\n              fill: theme.palette.secondary[200],\r\n            },\r\n          },\r\n        },\r\n        legends: {\r\n          text: {\r\n            fill: theme.palette.secondary[200],\r\n          },\r\n        },\r\n        tooltip: {\r\n          container: {\r\n            color: theme.palette.primary.main,\r\n          },\r\n        },\r\n      }}\r\n      margin={{ top: 20, right: 50, bottom: 50, left: 70 }}\r\n      xScale={{ type: \"point\" }}\r\n      yScale={{\r\n        type: \"linear\",\r\n        min: \"auto\",\r\n        max: \"auto\",\r\n        stacked: false,\r\n        reverse: false,\r\n      }}\r\n      yFormat=\" >-.2f\"\r\n      curve=\"catmullRom\"\r\n      enableArea={isDashboard}\r\n      axisTop={null}\r\n      axisRight={null}\r\n      axisBottom={{\r\n        format: (v) => {\r\n          if (isDashboard) return v.slice(0, 3);\r\n          return v;\r\n        },\r\n        orient: \"bottom\",\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? \"\" : \"Month\",\r\n        legendOffset: 36,\r\n        legendPosition: \"middle\",\r\n      }}\r\n      axisLeft={{\r\n        orient: \"left\",\r\n        tickValues: 5,\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard\r\n          ? \"\"\r\n          : `Total ${view === \"sales\" ? \"Revenue\" : \"Units\"} for Year`,\r\n        legendOffset: -60,\r\n        legendPosition: \"middle\",\r\n      }}\r\n      enableGridX={false}\r\n      enableGridY={false}\r\n      pointSize={10}\r\n      pointColor={{ theme: \"background\" }}\r\n      pointBorderWidth={2}\r\n      pointBorderColor={{ from: \"serieColor\" }}\r\n      pointLabelYOffset={-12}\r\n      useMesh={true}\r\n      legends={\r\n        !isDashboard\r\n          ? [\r\n              {\r\n                anchor: \"bottom-right\",\r\n                direction: \"column\",\r\n                justify: false,\r\n                translateX: 30,\r\n                translateY: -40,\r\n                itemsSpacing: 0,\r\n                itemDirection: \"left-to-right\",\r\n                itemWidth: 80,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.75,\r\n                symbolSize: 12,\r\n                symbolShape: \"circle\",\r\n                symbolBorderColor: \"rgba(0, 0, 0, .5)\",\r\n                effects: [\r\n                  {\r\n                    on: \"hover\",\r\n                    style: {\r\n                      itemBackground: \"rgba(0, 0, 0, .03)\",\r\n                      itemOpacity: 1,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            ]\r\n          : undefined\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default OverviewChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}