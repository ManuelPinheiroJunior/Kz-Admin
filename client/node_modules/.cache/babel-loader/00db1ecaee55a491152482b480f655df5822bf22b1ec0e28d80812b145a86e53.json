{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const api = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_BASE_URL\n  }),\n  reducerPath: \"adminApi\",\n  tagTypes: [\"User\", \"Products\", \"Customers\", \"Transactions\", \"Geography\", \"Sales\", \"Admins\", \"Performance\", \"Dashboard\"],\n  endpoints: build => ({\n    getUser: build.query({\n      query: id => `general/user/${id}`,\n      providesTags: [\"User\"]\n    }),\n    getProducts: build.query({\n      query: () => \"client/products\",\n      providesTags: [\"Products\"]\n    }),\n    getCustomers: build.query({\n      query: () => \"client/customers\",\n      providesTags: [\"Customers\"]\n    }),\n    getTransactions: build.query({\n      query: _ref => {\n        let {\n          page,\n          pageSize,\n          sort,\n          search\n        } = _ref;\n        return {\n          url: \"client/transactions\",\n          method: \"GET\",\n          params: {\n            page,\n            pageSize,\n            sort,\n            search\n          }\n        };\n      },\n      providesTags: [\"Transactions\"]\n    }),\n    getGeography: build.query({\n      query: () => \"client/geography\",\n      providesTags: [\"Geography\"]\n    }),\n    getSales: build.query({\n      query: () => \"sales/sales\",\n      providesTags: [\"Sales\"]\n    }),\n    getAdmins: build.query({\n      query: () => \"management/admins\",\n      providesTags: [\"Admins\"]\n    }),\n    getUserPerformance: build.query({\n      query: id => `management/performance/${id}`,\n      providesTags: [\"Performance\"]\n    }),\n    getDashboard: build.query({\n      query: () => \"general/dashboard\",\n      providesTags: [\"Dashboard\"]\n    })\n  })\n});\nexport const {\n  useGetUserQuery,\n  useGetProductsQuery,\n  useGetCustomersQuery,\n  useGetTransactionsQuery,\n  useGetGeographyQuery,\n  useGetSalesQuery,\n  useGetAdminsQuery,\n  useGetUserPerformanceQuery,\n  useGetDashboardQuery\n} = api;","map":{"version":3,"names":["createApi","fetchBaseQuery","api","baseQuery","baseUrl","process","env","REACT_APP_BASE_URL","reducerPath","tagTypes","endpoints","build","getUser","query","id","providesTags","getProducts","getCustomers","getTransactions","page","pageSize","sort","search","url","method","params","getGeography","getSales","getAdmins","getUserPerformance","getDashboard","useGetUserQuery","useGetProductsQuery","useGetCustomersQuery","useGetTransactionsQuery","useGetGeographyQuery","useGetSalesQuery","useGetAdminsQuery","useGetUserPerformanceQuery","useGetDashboardQuery"],"sources":["C:/Users/Manue/OneDrive/Área de Trabalho/projects/fullstack-admin/client/src/state/api.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const api = createApi({\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_BASE_URL }),\r\n  reducerPath: \"adminApi\",\r\n  tagTypes: [\r\n    \"User\",\r\n    \"Products\",\r\n    \"Customers\",\r\n    \"Transactions\",\r\n    \"Geography\",\r\n    \"Sales\",\r\n    \"Admins\",\r\n    \"Performance\",\r\n    \"Dashboard\",\r\n  ],\r\n  endpoints: (build) => ({\r\n    getUser: build.query({\r\n      query: (id) => `general/user/${id}`,\r\n      providesTags: [\"User\"],\r\n    }),\r\n    getProducts: build.query({\r\n      query: () => \"client/products\",\r\n      providesTags: [\"Products\"],\r\n    }),\r\n    getCustomers: build.query({\r\n      query: () => \"client/customers\",\r\n      providesTags: [\"Customers\"],\r\n    }),\r\n    getTransactions: build.query({\r\n      query: ({ page, pageSize, sort, search }) => ({\r\n        url: \"client/transactions\",\r\n        method: \"GET\",\r\n        params: { page, pageSize, sort, search },\r\n      }),\r\n      providesTags: [\"Transactions\"],\r\n    }),\r\n    getGeography: build.query({\r\n      query: () => \"client/geography\",\r\n      providesTags: [\"Geography\"],\r\n    }),\r\n    getSales: build.query({\r\n      query: () => \"sales/sales\",\r\n      providesTags: [\"Sales\"],\r\n    }),\r\n    getAdmins: build.query({\r\n      query: () => \"management/admins\",\r\n      providesTags: [\"Admins\"],\r\n    }),\r\n    getUserPerformance: build.query({\r\n      query: (id) => `management/performance/${id}`,\r\n      providesTags: [\"Performance\"],\r\n    }),\r\n    getDashboard: build.query({\r\n      query: () => \"general/dashboard\",\r\n      providesTags: [\"Dashboard\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetUserQuery,\r\n  useGetProductsQuery,\r\n  useGetCustomersQuery,\r\n  useGetTransactionsQuery,\r\n  useGetGeographyQuery,\r\n  useGetSalesQuery,\r\n  useGetAdminsQuery,\r\n  useGetUserPerformanceQuery,\r\n  useGetDashboardQuery,\r\n} = api;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,GAAG,GAAGF,SAAS,CAAC;EAC3BG,SAAS,EAAEF,cAAc,CAAC;IAAEG,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;EAAmB,CAAC,CAAC;EACtEC,WAAW,EAAE,UAAU;EACvBC,QAAQ,EAAE,CACR,MAAM,EACN,UAAU,EACV,WAAW,EACX,cAAc,EACd,WAAW,EACX,OAAO,EACP,QAAQ,EACR,aAAa,EACb,WAAW,CACZ;EACDC,SAAS,EAAGC,KAAK,KAAM;IACrBC,OAAO,EAAED,KAAK,CAACE,KAAK,CAAC;MACnBA,KAAK,EAAGC,EAAE,IAAM,gBAAeA,EAAG,EAAC;MACnCC,YAAY,EAAE,CAAC,MAAM;IACvB,CAAC,CAAC;IACFC,WAAW,EAAEL,KAAK,CAACE,KAAK,CAAC;MACvBA,KAAK,EAAE,MAAM,iBAAiB;MAC9BE,YAAY,EAAE,CAAC,UAAU;IAC3B,CAAC,CAAC;IACFE,YAAY,EAAEN,KAAK,CAACE,KAAK,CAAC;MACxBA,KAAK,EAAE,MAAM,kBAAkB;MAC/BE,YAAY,EAAE,CAAC,WAAW;IAC5B,CAAC,CAAC;IACFG,eAAe,EAAEP,KAAK,CAACE,KAAK,CAAC;MAC3BA,KAAK,EAAE;QAAA,IAAC;UAAEM,IAAI;UAAEC,QAAQ;UAAEC,IAAI;UAAEC;QAAO,CAAC;QAAA,OAAM;UAC5CC,GAAG,EAAE,qBAAqB;UAC1BC,MAAM,EAAE,KAAK;UACbC,MAAM,EAAE;YAAEN,IAAI;YAAEC,QAAQ;YAAEC,IAAI;YAAEC;UAAO;QACzC,CAAC;MAAA,CAAC;MACFP,YAAY,EAAE,CAAC,cAAc;IAC/B,CAAC,CAAC;IACFW,YAAY,EAAEf,KAAK,CAACE,KAAK,CAAC;MACxBA,KAAK,EAAE,MAAM,kBAAkB;MAC/BE,YAAY,EAAE,CAAC,WAAW;IAC5B,CAAC,CAAC;IACFY,QAAQ,EAAEhB,KAAK,CAACE,KAAK,CAAC;MACpBA,KAAK,EAAE,MAAM,aAAa;MAC1BE,YAAY,EAAE,CAAC,OAAO;IACxB,CAAC,CAAC;IACFa,SAAS,EAAEjB,KAAK,CAACE,KAAK,CAAC;MACrBA,KAAK,EAAE,MAAM,mBAAmB;MAChCE,YAAY,EAAE,CAAC,QAAQ;IACzB,CAAC,CAAC;IACFc,kBAAkB,EAAElB,KAAK,CAACE,KAAK,CAAC;MAC9BA,KAAK,EAAGC,EAAE,IAAM,0BAAyBA,EAAG,EAAC;MAC7CC,YAAY,EAAE,CAAC,aAAa;IAC9B,CAAC,CAAC;IACFe,YAAY,EAAEnB,KAAK,CAACE,KAAK,CAAC;MACxBA,KAAK,EAAE,MAAM,mBAAmB;MAChCE,YAAY,EAAE,CAAC,WAAW;IAC5B,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXgB,eAAe;EACfC,mBAAmB;EACnBC,oBAAoB;EACpBC,uBAAuB;EACvBC,oBAAoB;EACpBC,gBAAgB;EAChBC,iBAAiB;EACjBC,0BAA0B;EAC1BC;AACF,CAAC,GAAGrC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}