{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manue\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projects\\\\fullstack-admin\\\\client\\\\src\\\\scenes\\\\transactions\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, useTheme } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { useGetTransactionsQuery } from \"state/api\";\nimport Header from \"components/Header\";\nimport DataGridCustomToolbar from \"components/DataGridCustomToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const theme = useTheme();\n\n  // values to be sent to the backend\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(20);\n  const [sort, setSort] = useState({});\n  const [search, setSearch] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const {\n    data,\n    isLoading\n  } = useGetTransactionsQuery({\n    page,\n    pageSize,\n    sort: JSON.stringify(sort),\n    search\n  });\n  const columns = [{\n    field: \"_id\",\n    headerName: \"ID\",\n    flex: 1\n  }, {\n    field: \"userId\",\n    headerName: \"User ID\",\n    flex: 1\n  }, {\n    field: \"createdAt\",\n    headerName: \"CreatedAt\",\n    flex: 1\n  }, {\n    field: \"products\",\n    headerName: \"# of Products\",\n    flex: 0.5,\n    sortable: false,\n    renderCell: params => params.value.length\n  }, {\n    field: \"cost\",\n    headerName: \"Cost\",\n    flex: 1,\n    renderCell: params => `$${Number(params.value).toFixed(2)}`\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"1.5rem 2.5rem\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"TRANSACTIONS\",\n      subtitle: \"Entire list of transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      height: \"80vh\",\n      sx: {\n        \"& .MuiDataGrid-root\": {\n          border: \"none\"\n        },\n        \"& .MuiDataGrid-cell\": {\n          borderBottom: \"none\"\n        },\n        \"& .MuiDataGrid-columnHeaders\": {\n          backgroundColor: theme.palette.background.alt,\n          color: theme.palette.secondary[100],\n          borderBottom: \"none\"\n        },\n        \"& .MuiDataGrid-virtualScroller\": {\n          backgroundColor: theme.palette.primary.light\n        },\n        \"& .MuiDataGrid-footerContainer\": {\n          backgroundColor: theme.palette.background.alt,\n          color: theme.palette.secondary[100],\n          borderTop: \"none\"\n        },\n        \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n          color: `${theme.palette.secondary[200]} !important`\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        loading: isLoading || !data,\n        getRowId: row => row._id,\n        rows: data && data.transactions || [],\n        columns: columns,\n        rowCount: data && data.total || 0,\n        rowsPerPageOptions: [20, 50, 100],\n        pagination: true,\n        page: page,\n        pageSize: pageSize,\n        paginationMode: \"server\",\n        sortingMode: \"server\",\n        onPageChange: newPage => setPage(newPage),\n        onPageSizeChange: newPageSize => setPageSize(newPageSize),\n        onSortModelChange: newSortModel => setSort(...newSortModel),\n        components: {\n          Toolbar: DataGridCustomToolbar\n        },\n        componentsProps: {\n          toolbar: {\n            searchInput,\n            setSearchInput,\n            setSearch\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"V8da1NxRt+InUfxXpdKqQP9o/DI=\", false, function () {\n  return [useTheme, useGetTransactionsQuery];\n});\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","Box","useTheme","DataGrid","useGetTransactionsQuery","Header","DataGridCustomToolbar","Transactions","theme","page","setPage","pageSize","setPageSize","sort","setSort","search","setSearch","searchInput","setSearchInput","data","isLoading","JSON","stringify","columns","field","headerName","flex","sortable","renderCell","params","value","length","Number","toFixed","border","borderBottom","backgroundColor","palette","background","alt","color","secondary","primary","light","borderTop","row","_id","transactions","total","newPage","newPageSize","newSortModel","Toolbar","toolbar"],"sources":["C:/Users/Manue/OneDrive/Área de Trabalho/projects/fullstack-admin/client/src/scenes/transactions/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, useTheme } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useGetTransactionsQuery } from \"state/api\";\r\nimport Header from \"components/Header\";\r\nimport DataGridCustomToolbar from \"components/DataGridCustomToolbar\";\r\n\r\nconst Transactions = () => {\r\n  const theme = useTheme();\r\n\r\n  // values to be sent to the backend\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(20);\r\n  const [sort, setSort] = useState({});\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const { data, isLoading } = useGetTransactionsQuery({\r\n    page,\r\n    pageSize,\r\n    sort: JSON.stringify(sort),\r\n    search,\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      field: \"_id\",\r\n      headerName: \"ID\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"userId\",\r\n      headerName: \"User ID\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"createdAt\",\r\n      headerName: \"CreatedAt\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"products\",\r\n      headerName: \"# of Products\",\r\n      flex: 0.5,\r\n      sortable: false,\r\n      renderCell: (params) => params.value.length,\r\n    },\r\n    {\r\n      field: \"cost\",\r\n      headerName: \"Cost\",\r\n      flex: 1,\r\n      renderCell: (params) => `$${Number(params.value).toFixed(2)}`,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box m=\"1.5rem 2.5rem\">\r\n      <Header title=\"TRANSACTIONS\" subtitle=\"Entire list of transactions\" />\r\n      <Box\r\n        height=\"80vh\"\r\n        sx={{\r\n          \"& .MuiDataGrid-root\": {\r\n            border: \"none\",\r\n          },\r\n          \"& .MuiDataGrid-cell\": {\r\n            borderBottom: \"none\",\r\n          },\r\n          \"& .MuiDataGrid-columnHeaders\": {\r\n            backgroundColor: theme.palette.background.alt,\r\n            color: theme.palette.secondary[100],\r\n            borderBottom: \"none\",\r\n          },\r\n          \"& .MuiDataGrid-virtualScroller\": {\r\n            backgroundColor: theme.palette.primary.light,\r\n          },\r\n          \"& .MuiDataGrid-footerContainer\": {\r\n            backgroundColor: theme.palette.background.alt,\r\n            color: theme.palette.secondary[100],\r\n            borderTop: \"none\",\r\n          },\r\n          \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\r\n            color: `${theme.palette.secondary[200]} !important`,\r\n          },\r\n        }}\r\n      >\r\n        <DataGrid\r\n          loading={isLoading || !data}\r\n          getRowId={(row) => row._id}\r\n          rows={(data && data.transactions) || []}\r\n          columns={columns}\r\n          rowCount={(data && data.total) || 0}\r\n          rowsPerPageOptions={[20, 50, 100]}\r\n          pagination\r\n          page={page}\r\n          pageSize={pageSize}\r\n          paginationMode=\"server\"\r\n          sortingMode=\"server\"\r\n          onPageChange={(newPage) => setPage(newPage)}\r\n          onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\r\n          onSortModelChange={(newSortModel) => setSort(...newSortModel)}\r\n          components={{ Toolbar: DataGridCustomToolbar }}\r\n          componentsProps={{\r\n            toolbar: { searchInput, setSearchInput, setSearch },\r\n          }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}